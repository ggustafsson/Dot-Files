#!/usr/bin/env zsh

# Description: This script converts exported bank transcation logs from text
# files to CSV files (specific to Swedbank).
#
# Usage: swebp <file(s)>
#
# Written by Göran Gustafsson (gustafsson.g at gmail.com).
# License: BSD 3-Clause.

if [[ $# -eq 0 ]]; then
  echo "Usage: ${0:t} [FILENAME(S)]..."
  exit
fi

for arg; do
  output=${arg:r}.csv

  if [[ ! -f $arg ]]; then
    echo "File '${arg}' does not exist! Skipping..."
    continue
  elif [[ ! $arg == *.txt ]]; then
    echo "File '${arg}' does not end with '.txt'! Skipping..."
    continue
  fi

  if [[ $(file -I $arg) != *charset=utf-8 ]]; then
    echo "Converting file '${arg}' to UTF-8."
    iconv --from-code=latin1 --to-code=utf-8 $arg > ${arg}.tmp
    mv ${arg}.tmp $arg
  fi

  # These variables contains the awk commands that is used to retrieve the
  # right characters for each column (character X to Y on current line).
  column1='substr($0, 49, 15)'  # Bokföringsdatum
  column2='substr($0, 66, 17)'  # Transaktionsdatum
  column3='substr($0, 85, 16)'  # Referens
  column4='substr($0, 121, 26)' # Kontohändelse
  column5='substr($0, 147)'     # Belopp

  echo "Converting file... '${arg}' -> '${output}'"

  # Parse all lines after number 5 and modify the output with "sed" the
  # following ways:
  # 1. Remove spaces before all values.
  # 2. Remove spaces after all values.
  # 3. Add - to all empty fields.
  # 4. Replace , with . inside of amount.
  # 5. Remove space separators inside of amount.
  awk "NR > 5 { print $column1 \";\" $column2 \";\" $column3 \";\" \
                      $column4 \";\" $column5 }" $arg | \
    sed 's/;[[:space:]]*/;/g;
         s/[[:space:]]*;/;/g;
         s/;;/;-;/g;
         s/\([0-9]*\),\([0-9][0-9]\)/\1.\2/g;
         s/\([0-9]*\) \([0-9]*\).\([0-9][0-9]\)/\1\2.\3/g' > $output
done
