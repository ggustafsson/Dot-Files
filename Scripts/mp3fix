#!/usr/bin/env zsh

# Description: This script is used to fix the capitalization of tags in MP3
# files. I use this to fix old MP3 files (my FLAC to MP3 convert script
# "flaccon" fixes the capitalization of tags by default). This script depends
# on my independent script called "title" which is used to automatically fix
# the capitalization of every tag.

# Dependencies: mutagen and title

# Usage: mp3fix <file>
#        mp3fix *.mp3
#        find . -type f -iname "*.mp3" -exec mp3fix "{}" \;

# Written by GÃ¶ran Gustafsson (gustafsson.g at gmail.com).
# License: BSD 3-Clause.

if [[ $# -eq 0 ]]; then
  echo "Usage: ${0:t} [FILENAME(S)]..."
  exit
fi

if ! type -p title &> /dev/null; then
  echo "\nCommand 'title' not found! Exiting..."
  exit 1
fi

echo "Fixing tags in MP3 file(s)."

for arg; do
  echo

  if [[ ! -f $arg ]]; then
    echo "File '${arg}' does not exist! Skipping..."
    continue
  fi

  if [[ ! $arg == *.mp3 ]]; then
    echo "File '${arg}' does not end with '.mp3'! Skipping..."
    continue
  fi

  print -P "%B%F{cyan}Fixing tags in file '${arg}'.%f%b\n"

  # All the tags that will be saved. ARTIST, ALBUM and SONG.
  tags=(TPE1 TALB TIT2)

  # Put all tag information inside of various shell variables.
  for tag in $tags; do
    # The info variable will contain something like "TITLE=Text here".
    output=$(mutagen-inspect $arg | grep ^${tag}=)

    # The information variable will contain just "Text here".
    information=${output#*=}

    if [[ ! -z $information ]]; then
      information=$(title $information)
    else
      information=" " # If a tag is empty set it empty space.
    fi

    # Put the value of $information inside of the current tag variable.
    typeset $tag=$information
  done

  # Print out all tag information.
  for tag in $tags; do
    echo ${(P)tag}
  done

  # Change all the tags. ARTIST, ALBUM and SONG.
  mid3v2 -a $TPE1 -A $TALB -t $TIT2 $arg
done
