#!/usr/bin/env zsh

# Written by GÃ¶ran Gustafsson <gustafsson.g@gmail.com>.

# Description: This script makes it easy to validate HTML files through
# http://validator.w3.org from the command line.
#
# I have this in ~/.vimrc so i can easily validate files inside of Vim:
#
# nnoremap <Leader>w3 :!~/Scripts/validate "%"<CR>

# Usage: validate <file(s)>

if [[ ! $# -gt 0 ]]; then
  echo "Usage: $0:t [FILENAME(S)]..."
  exit
fi

echo "Validating HTML file(s)."

for arg; do
  echo

  if [[ ! -f $arg ]]; then
    echo "File '$arg' does not exist!"
    continue
  fi

  echo "Validating file '$arg'."

  # Changes the directory to where the file is. Otherwise upload won't work :(
  cd $arg:A:h
  results=$(curl --form "uploaded_file=@${arg:t};type=text/html" --form output=json --silent http://validator.w3.org/check)

  if [[ $? -gt 0 ]]; then
    echo "Failed at getting results! Exiting..."
    exit 1
  fi

  # Change back to the old directory. Otherwise the check for if the next file
  # exists will fail every time.
  cd -

  # Only work with lines that contain information about errors.
  parsed_results=$(echo $results | grep '"lastLine":')

  if [[ ! -z $parsed_results ]]; then
    echo "Found error(s) on line(s):\n"
    # Remove all the crap and only display unique errors. Must use "sort" to
    # make "uniq" work.
    echo $parsed_results | sed 's/^[ \t]*"lastLine":/ /;s/,//g' | sort --general-numeric-sort | uniq
  else
    echo "No errors found!"
  fi
done
