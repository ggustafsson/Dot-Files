#!/usr/bin/env zsh

# Written by GÃ¶ran Gustafsson <gustafsson.g@gmail.com>.

# Description: This script converts FLAC files to high quality MP3 files in a
# very easy and convenient way. By default this script depends on my
# independent script called "title" which is used to automatically fix the
# capitalization of every tag (use the -ic flag to stop it).

# Dependencies: flac, lame and title

# Usage: flaccon <file>
#        flaccon -ic <file>
#        flaccon *.flac
#        find . -type f -iname "*.flac" -exec flaccon "{}" \;

if [[ ! $# -gt 0 ]]; then
  echo "Usage: $0:t [OPTION]... [FILENAME(S)]...

  -ic, --ignore-case  Don't fix capitalization in tags and filenames."
  exit
fi

echo "Converting FLAC file(s) to MP3 file(s)."

if [[ $1 == -ic ]]; then
  fix_capitalization=0
  shift # Removes $1 from argument list.
else
  if type -p title >& /dev/null; then
    fix_capitalization=1
  else
    echo "\nCommand 'title' not found! Skipping capitalization fix..."
    fix_capitalization=0
  fi
fi

for file in $*; do
  echo

  if [[ ! -f $file ]]; then
    echo "File '$file' does not exist!"
    continue
  fi

  if [[ ! $file == *.flac ]]; then
    echo "File '$file' does not end with 'flac'."
    continue
  fi

  # All the tags that will be saved.
  tags=(title artist album tracknumber totaltracks genre date)

  # Put all tag information inside of various shell variables.
  for tag in $tags; do
    # The info variable will contain something like "TITLE=Text here".
    output=$(metaflac --show-tag=$tag $file)

    # The information variable will contain just "Text here".
    information=${output#*=}

    if [[ $fix_capitalization -eq 1 ]]; then
      # If the variable information is not empty run my external script
      # "title" on it to fix the capitalization of the text.
      if [[ ! -z $information ]]; then
        information=$(title $information)
      fi
    fi

    # Put the value of $information inside of the current tag variable.
    typeset $tag=$information
  done

  print -P "%B%F{cyan}Converting file '$file' to MP3.%f%b\n"

  # Print out all tag information.
  for tag in $tags; do
    echo "${(C)tag}: ${(P)tag}"
  done

  # Decode FLAC file with "flac" and encode it to MP3 with "lame".
  flac -dc $file | lame -b 320 -h --ignore-tag-errors \
    --tt "$title" \
    --ta "$artist" \
    --tl "$album" \
    --tn "$tracknumber/$totaltracks" \
    --tg "$genre" \
    --ty "$date" \
    --add-id3v2 - ${file:r}.mp3
done
