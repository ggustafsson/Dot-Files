# GÃ¶ran Gustafsson <gustafsson.g@gmail.com>

export GEM_HOME=~/.ruby
export GREP_OPTIONS="--color=auto -i"
export LC_COLLATE=C

export LESS=FRSX
export PAGER=less

export LS_COLORS="rs=0:di=01;34:ln=01;35:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=01;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32"
export LS_COLORS="$LS_COLORS:*.bmp=01;33:*.gif=01;33:*.ico=01;33:*.jpg=01;33:*.jpeg=01;33:*.png=01;33:*.pxi=01;33:*.svg=01;33:*.tiff=01;33"
export LS_COLORS="$LS_COLORS:*.flac=01;35:*.nsf=01;35:*.nsfe=01;35:*.m4r=01;35:*.mp3=01;35:*.ogg=01;35:*.wav=01;35"
export LS_COLORS="$LS_COLORS:*.avi=01;36:*.flv=01;36:*.f4v=01;36:*.mkv=01;36:*.mov=01;36:*.mpg=01;36:*.mpeg=01;36:*.mp4=01;36:*.m4v=01;36:*.wmv=01;36"
export LS_COLORS="$LS_COLORS:*.dmg=01;31:*.iso=01;31:*.rar=01;31:*.tar=01;31:*.tar.bz2=01;31:*.tar.gz=01;31:*.tgz=01;31:*.zip=01;31:*.7z=01;31"

if [[ $OSTYPE == darwin* ]]; then
  export EDITOR="/Applications/MacVim.app/Contents/MacOS/Vim -g --remote-tab-silent"
  export GIT_EDITOR=/Applications/MacVim.app/Contents/MacOS/Vim
  export VISUAL=$EDITOR
else
  export EDITOR=vim
  export GIT_EDITOR=$EDITOR
  export VISUAL=$EDITOR
fi

[ -f ~/.ssh/config ] && SSH_HOSTS=($(sed -n 's/^Host //p' ~/.ssh/config))
DIRSTACKSIZE=20
TODO_FILE=~/Documents/Text\ Files/To-do\ List.todo

HISTFILE=~/.zsh_histfile
HISTSIZE=1000
SAVEHIST=10000

if [[ $OSTYPE == darwin* ]]; then
  WIRESHARK=(/usr/local/Cellar/wireshark/*/bin/*(N:t))

  path=(/usr/local/bin /usr/local/sbin /usr/local/Cellar/curl/*/bin(N) /bin /sbin /usr/bin /usr/sbin /usr/X11/bin ~/Scripts/OSX)
else
  path+=(~/Scripts/Linux)

  umask 077
fi
path+=(~/Scripts ~/.ruby/bin(N))

setopt combiningchars
setopt correct
setopt interactivecomments
setopt longlistjobs
setopt nobeep
setopt notify
setopt promptsubst

setopt appendhistory
setopt extendedhistory
setopt histexpiredupsfirst
setopt histignoredups
setopt histignorespace
setopt histreduceblanks
setopt histverify
setopt incappendhistory

setopt autopushd
setopt pushdignoredups

[[ ! $TERM == dumb ]] && autoload -U colors && colors
autoload -U compinit && compinit
autoload -U url-quote-magic && zle -N self-insert url-quote-magic

bindkey -e

zstyle ':completion:*'          insert-tab pending
zstyle ':completion:*'          list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*'          matcher-list 'm:{[:lower:]}={[:upper:]}'
zstyle ':completion:*'          menu select
zstyle ':completion:*'          special-dirs true
zstyle ':completion:*:cd:*'     ignore-parents parent pwd
zstyle ':completion:*:warnings' format "zsh: no matches found."

[[ $OSTYPE == darwin* ]] && compdef _man manp
compdef _path_files cd

precmd() {
  echo
}

function git_branch {
  REFERENCE=$(git symbolic-ref HEAD 2> /dev/null) || return
  BRANCH=${REFERENCE#refs/heads/}

  if [[ -n $(git rev-list origin..HEAD 2> /dev/null) ]]; then
    if [[ -n $(git status -s 2> /dev/null) ]]; then
      echo "%F{cyan}ahead %F{red}$BRANCH%f"
    else
      echo "%F{cyan}ahead %F{green}$BRANCH%f"
    fi
  elif [[ -n $(git status -s 2> /dev/null) ]]; then
    echo "%F{red}$BRANCH%f"
  else
    echo "%F{green}$BRANCH%f"
  fi
}

function todo_info {
  REFERENCE=$(egrep "(^- |^! |^=)" $TODO_FILE 2> /dev/null | wc -l) || return
  [[ $REFERENCE -gt 0 ]] && echo "%F{green}$REFERENCE%f "
}

if [[ $TERM == dumb ]]; then
  PROMPT='%~ $ '
else
  PROMPT='%B${(C)USER} %F{yellow}${(C)HOST%%.*}%f%b %~ %B$(todo_info)%(?..%F{red}%?%f )%F{blue}$%f%b '
  RPROMPT='%B$(git_branch)%b'
fi

if [[ $OSTYPE == darwin* ]]; then
  alias capit="imagesnap -t 2 -w 1"
  alias cde="cd /Volumes/External"
  alias cf="say command finished"
  alias eject="osascript -e 'tell application \"Finder\" to eject (every disk whose ejectable is true)' && echo 'All external drives ejected!'"
  alias mvrm='cd /Volumes/External/Music/FLAC && mv "$(random)" ~/Music/Trial/ && cd - >& /dev/null && open ~/Music/Trial'
  alias keepm="mv ~/Music/Trial/* ~/Music/MP3/"
  alias o="open"
  alias safari="open -a Safari"
  alias study="school && tim -p"

  alias awk="gawk"
  alias cal="gcal -s 1"
  alias dircolors="gdircolors"
  alias head="ghead"
  alias ls="gls -Fh --color=auto"
  alias sed="gsed"
  alias tail="gtail"
  alias wc="gwc"

  alias brewi="brew install"
  alias brewr="brew uninstall"
  alias brews="brew search"
  alias brewu="brew update && brew upgrade"

  alias top="top -o cpu"
  alias topme='top -o cpu -U $USER'

  alias tvim="/Applications/MacVim.app/Contents/MacOS/Vim"
  alias tvimdiff="/Applications/MacVim.app/Contents/MacOS/Vim -d"
  alias vimdiff='/Applications/MacVim.app/Contents/MacOS/Vim -d -g $* >& /dev/null'

  alias wifioff="networksetup -setairportpower en0 off"
  alias wifion="networksetup -setairportpower en0 on"
  alias wifiscan="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s"

  for X in $WIRESHARK; do
    alias $X="wiresharkfix $X"
  done
else
  if type pacman >& /dev/null; then
    alias paci="sudo pacman -S"
    alias pacr="sudo pacman -Rs"
    alias pacu="sudo pacman -Syu"
  fi

  type ifconfig >& /dev/null || alias ifconfig="ip addr"
  type netstat >& /dev/null  || alias netstat="ss"

  alias cal="cal -m"
  alias ls="ls -Fh --color=auto"
  alias topme='top -U $USER'
  alias vl='tail -n $LINES -f /var/log/everything.log'
fi

type hub >& /dev/null && alias git="hub"
type ip >& /dev/null  && alias lip="ip addr" || alias lip="ifconfig"

alias bc="bc -q"
alias c="clear"
alias cdh="dirs -v | sort -r"
alias chkm="find ~/Music/MP3 -type f ! -iname '*.mp3'"
alias df="df -h"
alias du="du -sh"
alias hist="history -i 1"
alias iip="curl icanhazip.com"
alias ka="killall"
alias mkdir="mkdir -pv"
alias phpweb="php -S 0.0.0.0:8080"
alias ping="ping -c 10"
alias random='FILES=(*) && echo $FILES[$RANDOM%$#FILES+1]'
alias ref="ls -t | head -n 5"
alias reload="source ~/.zshrc"
alias tv='vim "$TODO_FILE"'
alias wgetp="wget --page-requisites --adjust-extension --convert-links"
alias ycal='cal $(date +%Y)'
alias yt="youtube-dl -l"

alias -- -="cd -"
alias ...="cd ../.."
alias ..="cd .."

alias cdd="cd ~/Downloads"
alias cdp="cd ~/Projects"
alias cds="cd ~/School"
alias cdt="cd ~/Documents/Text\ Files"

alias cl="wc -l"
alias cw="wc -w"
alias g="grep"
alias he="head"
alias l="less"
alias rg="rgrep"
alias so="sort"
alias ta="tail"
alias un="uniq"

alias cp="cp -vi"
alias mv="mv -vi"
alias rm="rm -v"

alias cpass="openssl rand -base64 20"
alias pass="vim ~/Documents/Text\ Files/Passwords.blowfish"

alias cdsd='echo "Change directory to saved PATH." && cd $SAVE_DIR'
alias sd='echo "Saving current PATH." && SAVE_DIR=$PWD'

alias d="ls -l"
alias da="ls -la"
alias l1="ls -1"
alias la="ls -a"

alias gad="git add"
alias gbr="git branch"
alias gca="git commit -a -v"
alias gch="git checkout"
alias gcl="git clone"
alias gco="git commit -v"
alias gdi="git diff"
alias gfe="git fetch"
alias gin="git init"
alias glo="git log"
alias gme="git merge"
alias gmv="git mv"
alias gpl="git pull"
alias gpu='git push && [[ $OSTYPE == darwin* ]] && say fuck yeah'
alias grm="git rm"
alias gst="git status -s -b"
alias gun="git reset --soft HEAD^"

alias int="tim -i"
alias pomo="tim -p"
alias rint="tim -ri"

alias ps="ps aux"
alias psme="\ps ux"

alias py="python3"
alias pyweb="python3 -m http.server 8080"

alias tm="tmux"
alias tma="tmux attach"

for X in $SSH_HOSTS; do
  alias $X="ssh $X"
done

if [[ $OSTYPE == darwin* ]]; then
  function dict {
    if [[ $# == 1 ]]; then
      open "dict://$1"
    else
      echo "Usage: $0 [WORD]..."
    fi
  }

  function f {
    if [[ $# -gt 0 ]]; then
      open -a Finder $*
    else
      open .
    fi
  }

  function manp {
    if [[ $# -gt 0 ]]; then
      for ARGUMENT in $*; do
        man -t $ARGUMENT | open -f -a Preview
      done
    else
      echo "Usage: $0 [MAN PAGE(S)]..."
    fi
  }

  function ql {
    if [[ $# -gt 0 ]]; then
      qlmanage -p $* >& /dev/null
    else
      qlmanage
    fi
  }

  function smb {
    if [[ $# == 1 ]]; then
      open "smb://$1"
    else
      echo "Usage: $0 [IP/DNS]..."
    fi
  }

  function vim {
    if [[ $# -gt 0 ]]; then
      /Applications/MacVim.app/Contents/MacOS/Vim -g --remote-tab-silent $*
    else
      /Applications/MacVim.app/Contents/MacOS/Vim -g
    fi
  }

  function vnc {
    if [[ $# == 1 ]]; then
      open "vnc://$1"
    else
      echo "Usage: $0 [IP/DNS]..."
    fi
  }
else
  if type pacman >& /dev/null; then
    function pacs {
      CL='\\e['
      RS='\\e[0;0m'

      echo -e "$(pacman -Ss "$*" | sed "
        /^core/         s,.*,${CL}1;31m&${RS},
        /^extra/        s,.*,${CL}0;32m&${RS},
        /^community/    s,.*,${CL}1;35m&${RS},
        /^[^[:space:]]/ s,.*,${CL}0;36m&${RS},
      ")" | less
    }
  fi
fi

function 256colors {
  for X in {0..255} ; do
    echo "\x1b[38;5;${X}mColor ${X}"
  done
}

function ff {
  if [[ $# == 1 ]]; then
    find -L . -iname $1 | sed 's/.\///'
  else
    echo "Usage: $0 [PATTERN]..."
  fi
}

function ffp {
  if [[ $# == 1 ]]; then
    find -L "$PWD" -iname $1
  else
    echo "Usage: $0 [PATTERN]..."
  fi
}

function h {
  if [[ $# -gt 0 ]]; then
    history -i 1 | grep "$*"
  else
    history -30
  fi
}

function mkcd {
  if [[ $# == 1 ]]; then
    mkdir -p $1
    cd $1
  else
    echo "Usage: $0 [PATH]..."
  fi
}

function p {
  if [[ $# -gt 0 ]]; then
    ps | tail -n +2 | grep -v "grep $*" | grep "$*"
  else
    ps
  fi
}

function perml {
  if [[ $# -gt 0 ]]; then
    if [[ $OSTYPE == darwin* ]]; then
      find $* -type d -exec chmod -N "{}" \; -exec chmod 755 "{}" \;
      find $* -type f -exec chmod -N "{}" \; -exec chmod 644 "{}" \;
    else
      find $* -type d -exec chmod 755 "{}" \;
      find $* -type f -exec chmod 644 "{}" \;
    fi
  else
    echo "Usage: $0 [PATH]..."
  fi
}

function perms {
  if [[ $# -gt 0 ]]; then
    if [[ $OSTYPE == darwin* ]]; then
      find $* -type d -exec chmod -N "{}" \; -exec chmod 700 "{}" \;
      find $* -type f -exec chmod -N "{}" \; -exec chmod 600 "{}" \;
    else
      find $* -type d -exec chmod 700 "{}" \;
      find $* -type f -exec chmod 600 "{}" \;
    fi
  else
    echo "Usage: $0 [PATH]..."
  fi
}

function rgrep {
  if [[ $# == 1 ]]; then
    grep -r $1 .
  elif [[ $# == 2 ]]; then
    grep -r $*
  else
    echo "Usage: $0 [PATTERN] [FILENAME]..."
  fi
}

function t {
  [ ! -f $TODO_FILE ] && echo "TODO file does not exist." && return 1

  if [[ $# -gt 0 ]]; then
    sed '/^[#tab]*$/d' $TODO_FILE > $TODO_FILE.tmp
    echo "- $*\n" >> $TODO_FILE.tmp
    mv -f $TODO_FILE.tmp $TODO_FILE >& /dev/null
  else
    if [ ! -s $TODO_FILE ]; then
      echo "TODO file is currently empty." && return
    else
      sed '/^[#tab]*$/d' $TODO_FILE
    fi
  fi
}

function tcolors {
  for X in {30..37} ; do
    echo -n "\033[0;${X}m0;${X}m\033[0m "
  done
  echo
  for X in {30..37} ; do
    echo -n "\033[1;${X}m1;${X}m\033[0m "
  done
  echo
  for X in {40..47} ; do
    echo -n "\033[1;${X}m1;${X}m\033[0m "
  done
  echo
}

