# GÃ¶ran Gustafsson <gustafsson.g@gmail.com>

export GEM_HOME=~/.ruby
export LC_COLLATE=C

export LESS=FRX
export PAGER=less

export LS_COLORS="*.bmp=01;33:*.gif=01;33:*.ico=01;33:*.jpg=01;33:*.jpeg=01;33:*.png=01;33:*.svg=01;33:*.tiff=01;33"
export LS_COLORS="$LS_COLORS:*.flac=01;35:*.nsf=01;35:*.nsfe=01;35:*.m4r=01;35:*.mp3=01;35:*.ogg=01;35:*.wav=01;35"
export LS_COLORS="$LS_COLORS:*.avi=01;36:*.flv=01;36:*.f4v=01;36:*.mkv=01;36:*.mov=01;36:*.mpg=01;36:*.mpeg=01;36:*.mp4=01;36:*.m4v=01;36:*.wmv=01;36"
export LS_COLORS="$LS_COLORS:*.dmg=01;31:*.iso=01;31:*.rar=01;31:*.tar=01;31:*.tar.bz2=01;31:*.tar.gz=01;31:*.zip=01;31"

if [[ $OSTYPE == darwin* ]]; then
  export EDITOR="/Applications/MacVim.app/Contents/MacOS/Vim -g --remote-tab-silent"
  export GIT_EDITOR="/Applications/MacVim.app/Contents/MacOS/Vim"
  export VISUAL=$EDITOR
else
  export EDITOR=vim
  export GIT_EDITOR=$EDITOR
  export VISUAL=$EDITOR
fi

[ -f ~/.ssh/config ] && SSH_HOSTS=($(sed -n 's/^Host //p' ~/.ssh/config))
DIRSTACKSIZE=17
TODO_FILE=~/Documents/Text\ Files/To-do\ List.todo

HISTFILE=~/.zsh_histfile
HISTSIZE=2000
SAVEHIST=6000

if [[ $OSTYPE == darwin* ]]; then
  path=(/usr/local/bin /usr/local/sbin /bin /sbin /usr/bin /usr/sbin /usr/X11/bin ~/Scripts ~/Scripts/OSX ~/.ruby/bin(N) ~/.ruby/gems/*/bin(N))
else
  path+=(~/Scripts ~/Scripts/Linux ~/.ruby/bin(N) ~/.ruby/gems/*/bin(N))

  umask 077
fi

setopt correct
setopt interactivecomments
setopt longlistjobs
setopt nobeep
setopt notify
setopt promptsubst

setopt appendhistory
setopt extendedhistory
setopt histexpiredupsfirst
setopt histignoredups
setopt histreduceblanks
setopt histverify
setopt incappendhistory

setopt autopushd
setopt pushdignoredups

setopt combiningchars
setopt noautomenu

[[ ! $TERM == dumb ]] && autoload -U colors && colors
autoload -U compinit && compinit
autoload -U url-quote-magic && zle -N self-insert url-quote-magic

bindkey -v
bindkey '^?' backward-delete-char
bindkey -M vicmd 'R' custom-vi-replace

zstyle ':completion:*'          insert-tab pending
zstyle ':completion:*'          matcher-list 'm:{[:lower:]}={[:upper:]}'
zstyle ':completion:*'          special-dirs true
zstyle ':completion:*:cd:*'     ignore-parents parent pwd
zstyle ':completion:*:warnings' format "zsh: no matches found."

[[ $OSTYPE == darwin* ]] && compdef _man manp
compdef _path_files cd
compdef _path_files git add

precmd() {
  echo
}

function git_branch {
  REFERENCE=$(git symbolic-ref HEAD 2> /dev/null) || return
  BRANCH=${REFERENCE#refs/heads/}

  if [[ -n $(git rev-list origin..HEAD 2> /dev/null) ]]; then
    if [[ -n $(git status -s 2> /dev/null) ]]; then
      echo "%F{cyan}ahead %F{red}$BRANCH%f"
    else
      echo "%F{cyan}ahead %F{green}$BRANCH%f"
    fi
  elif [[ -n $(git status -s 2> /dev/null) ]]; then
    echo "%F{red}$BRANCH%f"
  else
    echo "%F{green}$BRANCH%f"
  fi
}

function todo_info {
  REFERENCE=$(grep '^  ' $TODO_FILE 2> /dev/null | egrep -v '^   ' | wc -l) || return
  [[ ! $REFERENCE == 0 ]] && echo "%F{green}$REFERENCE%f "
}

function custom-vi-replace {
  REPLACE=1 && zle vi-replace && REPLACE=0
}
zle -N custom-vi-replace

function zle-line-init zle-keymap-select {
  zle reset-prompt
}
zle -N zle-line-init && zle -N zle-keymap-select

function zsh_mode {
  if [[ $KEYMAP == vicmd ]]; then
    echo "%F{red}E%f"
  elif [[ $REPLACE == 1 ]]; then
    echo "%F{magenta}R%f"
  else
    echo "%F{blue}$%f"
  fi
}

if [[ $TERM == dumb ]]; then
  PROMPT='%~ $ '
else
  PROMPT='%B${(C)USER} %F{yellow}${(C)HOST%%.*}%f%b %~ %B$(todo_info)%b%B$(zsh_mode)%b '
  RPROMPT='%B$(git_branch)%b'
fi

if [[ $OSTYPE == darwin* ]]; then
  alias capit="imagesnap -t 2 -w 1"
  alias cde="cd /Volumes/External"
  alias cf="say command finished"
  alias dontsleep="pmset noidle"
  alias eject="osascript -e 'tell application \"Finder\" to eject (every disk whose ejectable is true)' && echo 'All external drives ejected!'"
  alias int="networksetup -setairportpower en0 off && tim -i"
  alias o="open"
  alias safari="open -a Safari"

  alias awk="gawk"
  alias cal="gcal -s 1"
  alias head="ghead"
  alias ls="gls -Fh --color=auto"
  alias sed="gsed"
  alias sort="gsort"
  alias tail="gtail"
  alias wc="gwc"

  alias brewi="brew install"
  alias brewr="brew uninstall"
  alias brews="brew search"
  alias brewu="brew update && brew upgrade"

  alias top="top -o cpu"
  alias topme='top -o cpu -U $USER'

  alias tvim="/Applications/MacVim.app/Contents/MacOS/Vim"
  alias tvimdiff="/Applications/MacVim.app/Contents/MacOS/Vim -d"
  alias vimdiff='/Applications/MacVim.app/Contents/MacOS/Vim -d -g $* >& /dev/null'

  alias wifioff="networksetup -setairportpower en0 off"
  alias wifion="networksetup -setairportpower en0 on"
  alias wifiscan="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s"
else
  alias agentadd='eval $(ssh-agent) >& /dev/null && ssh-add'
  alias cal="cal -m"
  alias int="tim -i"
  alias ls="ls -Fh --color=auto"
  alias vl='tail -n $LINES -f /var/log/everything.log'
  alias x="startx"

  alias paci="sudo pacman -S"
  alias pacr="sudo pacman -Rs"
  alias pacu="sudo pacman -Syu"
fi

type hub >& /dev/null && alias git="hub"
type ip >& /dev/null  && alias lip="ip addr" || alias lip="ifconfig"

alias bc="bc -q"
alias c="clear"
alias chkm="find ~/Music/MP3 -type f ! -iname '*.mp3'"
alias df="df -h"
alias dh="dirs -v | sort -r"
alias du="du -sh"
alias egrep="egrep --color=auto -i"
alias fetch="wget --page-requisites --adjust-extension --convert-links"
alias grep="grep --color=auto -i"
alias hi="history"
alias iip="curl -s http://automation.whatismyip.com/n09230945.asp | html2text"
alias ka="killall"
alias mkdir="mkdir -pv"
alias ping="ping -c 10"
alias random='FILES=(*) && echo $FILES[$RANDOM%$#FILES+1]'
alias re="ls -t | head -n 5"
alias reload="source ~/.zshrc"
alias s="screen"
alias tv='vim "$TODO_FILE"'
alias ycal='cal $(date +%Y)'
alias yt="youtube-dl -l"

alias -- -="cd -"
alias ...="cd ../.."
alias ..="cd .."

alias cdd="cd ~/Downloads"
alias cdp="cd ~/Projects"
alias cdt="cd ~/Documents/Text\ Files"

alias cl="wc -l"
alias cw="wc -w"
alias g="grep"
alias he="head"
alias l="less"
alias rg="rgrep"
alias so="sort"
alias ta="tail"
alias un="uniq"

alias cp="cp -vi"
alias mv="mv -vi"
alias rm="rm -v"

alias cpass="openssl rand -base64 20"
alias pass="vim ~/Documents/Text\ Files/Passwords.txt"

alias csd='echo "Change directory to saved PATH." && cd $SAVE_DIR'
alias sd='echo "Saving current PATH." && SAVE_DIR=$PWD'

alias d="ls -l"
alias da="ls -la"
alias l1="ls -1"
alias la="ls -a"

alias gad="git add"
alias gbr="git branch"
alias gca="git commit -a -v"
alias gch="git checkout"
alias gcl="git clone"
alias gco="git commit -v"
alias gdi="git diff"
alias gfe="git fetch"
alias gin="git init"
alias glo="git log"
alias gme="git merge"
alias gmv="git mv"
alias gpl="git pull"
alias gpu='git push && [[ $OSTYPE == darwin* ]] && say fuck yeah'
alias grm="git rm"
alias gst="git status -s -b"
alias gun="git reset --soft HEAD^"

alias pomo="tim -p"
alias rint="tim -ri"

alias py="python3"
alias pyweb="python3 -m http.server 8080"

for X in $SSH_HOSTS; do
  alias $X="ssh $X"
done

for X in {1..16}; do
  alias cd$X="cd +$X >& /dev/null"
done

if [[ $OSTYPE == darwin* ]]; then
  function dict {
    if [ ! -z $1 ] && [[ $# < 2 ]]; then
      open "dict://$1"
    else
      echo "Usage: $0 [WORD]..."
    fi
  }

  function f {
    if [ ! -z $1 ]; then
      open -a Finder $*
    else
      open .
    fi
  }

  function manp {
    if [ ! -z $1 ]; then
      for ARGUMENT in $*; do
        man -t $ARGUMENT | open -f -a Preview
      done
    else
      echo "Usage: $0 [MAN PAGE]..."
    fi
  }

  function ql {
    if [ ! -z $1 ]; then
      qlmanage -p $* >& /dev/null
    else
      qlmanage
    fi
  }

  function smb {
    if [ ! -z $1 ] && [[ $# < 2 ]]; then
      open "smb://$1"
    else
      echo "Usage: $0 [IP/DNS]..."
    fi
  }

  function vim {
    if [ -z $1 ]; then
      /Applications/MacVim.app/Contents/MacOS/Vim -g
    else
      /Applications/MacVim.app/Contents/MacOS/Vim -g --remote-tab-silent $*
    fi
  }

  function vnc {
    if [ ! -z $1 ] && [[ $# < 2 ]]; then
      open "vnc://$1"
    else
      echo "Usage: $0 [IP/DNS]..."
    fi
  }
else
  function pacs {
    CL='\\e['
    RS='\\e[0;0m'

    echo -e "$(pacman -Ss "$*" | sed "
      /^core/         s,.*,${CL}1;31m&${RS},
      /^extra/        s,.*,${CL}0;32m&${RS},
      /^community/    s,.*,${CL}1;35m&${RS},
      /^[^[:space:]]/ s,.*,${CL}0;36m&${RS},
    ")" | less -R
  }

  function restart {
    for ARGUMENT in $*; do
      sudo /etc/rc.d/$ARGUMENT restart
    done
  }

  function start {
    for ARGUMENT in $*; do
      sudo /etc/rc.d/$ARGUMENT start
    done
  }

  function stop {
    for ARGUMENT in $*; do
      sudo /etc/rc.d/$ARGUMENT stop
    done
  }
fi

function 256colors {
  for i in {0..255} ; do
    printf "\x1b[38;5;${i}mColor ${i}\n"
  done
}

function ff {
  if [ ! -z $1 ] && [[ $# < 2 ]]; then
    find . -iname $* | sed 's/.\///'
  else
    echo "Usage: $0 [PATTERN]..."
  fi
}

function ffp {
  if [ ! -z $1 ] && [[ $# < 2 ]]; then
    find "$PWD" -iname $*
  else
    echo "Usage: $0 [PATTERN]..."
  fi
}

function h {
  if [ ! -z $1 ]; then
    history -i 1 | grep "$*"
  else
    history -i 1
  fi
}

function mkcd {
  if [ ! -z $1 ]; then
    mkdir -p "$*"
    cd "$*"
  else
    echo "Usage: $0 [NAME]..."
  fi
}

function p {
  if [ ! -z $1 ]; then
    ps ax | grep -v "grep --color=auto -i $*" | grep "$*"
  else
    ps ax
  fi
}

function perm22 {
  if [[ $OSTYPE == darwin* ]]; then
    find . -type d -exec chmod -N 755 "{}" \;
    find . -type f -exec chmod -N 644 "{}" \;
  else
    find . -type d -exec chmod 755 "{}" \;
    find . -type f -exec chmod 644 "{}" \;
  fi
}

function perm77 {
  if [[ $OSTYPE == darwin* ]]; then
    find . -type d -exec chmod -N 700 "{}" \;
    find . -type f -exec chmod -N 600 "{}" \;
  else
    find . -type d -exec chmod 700 "{}" \;
    find . -type f -exec chmod 600 "{}" \;
  fi
}

function rgrep {
  if [ ! -z $1 ] && [[ $# == 1 ]]; then
    grep -r $* .
  elif [ ! -z $1 ] && [[ $# == 2 ]]; then
    grep -r $*
  else
    echo "Usage: $0 [PATTERN]..."
  fi
}

function t {
  [ ! -f $TODO_FILE ] && echo "TODO file does not exist." && return

  if [ -z $1 ]; then
    if [ ! -s $TODO_FILE ]; then
      echo "TODO file is currently empty." && return
    else
      sed '/^[#tab]*$/d' $TODO_FILE
    fi
  else
    sed '/^[#tab]*$/d' $TODO_FILE > $TODO_FILE.tmp
    echo "  $*\n" >> $TODO_FILE.tmp
    mv -f $TODO_FILE.tmp $TODO_FILE >& /dev/null
  fi
}

function tcolors {
  echo -n "\033[1;30m1;30m\033[0m "
  echo -n "\033[1;31m1;31m\033[0m "
  echo -n "\033[1;32m1;32m\033[0m "
  echo -n "\033[1;33m1;33m\033[0m "
  echo -n "\033[1;34m1;34m\033[0m "
  echo -n "\033[1;35m1;35m\033[0m "
  echo -n "\033[1;36m1;36m\033[0m "
  echo "\033[1;37m1;37m\033[0m "

  echo -n "      "
  echo -n "\033[1;41m1;41m\033[0m "
  echo -n "\033[1;42m1;42m\033[0m "
  echo -n "\033[1;43m1;43m\033[0m "
  echo -n "\033[1;44m1;44m\033[0m "
  echo -n "\033[1;45m1;45m\033[0m "
  echo -n "\033[1;46m1;46m\033[0m "
  echo "\033[1;47m1;47m\033[0m"
}

