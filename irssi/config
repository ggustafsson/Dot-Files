servers = (
  {
    address = "wineasy.se.quakenet.org";
    chatnet = "Quakenet";
    port = "6667";
  },
  {
    address = "leguin.freenode.net";
    chatnet = "Freenode";
    port = "7000";
    use_ssl = "yes";
  }
);

aliases = {
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  ATAG = "WINDOW SERVER";
  B = "ban";
  BANS = "ban";
  BEER = "say FREE BEER! https://github.com/ggustafsson/Free-Beer";
  BYE = "quit";
  C = "clear";
  CALC = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  CHAT = "dcc chat";
  CL = "clear";
  DATE = "time";
  DESCRIBE = "action";
  EXEMPTLIST = "mode $C +e";
  EXIT = "quit";
  GOTO = "sb goto";
  HOST = "userhost";
  IG = "ignore";
  INVITELIST = "mode $C +I";
  J = "join";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  LAST = "lastlog";
  LEAVE = "part";
  M = "msg";
  MUB = "unban *";
  N = "names";
  Q = "QUERY";
  RESET = "set -default";
  RUN = "SCRIPT LOAD";
  SAY = "msg *";
  SB = "scrollback";
  SBAR = "STATUSBAR";
  SIGNOFF = "quit";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  T = "topic";
  UB = "unban";
  UMODE = "mode $N";
  UNIG = "unignore";
  UNSET = "set -clear";
  W = "who";
  WC = "window close";
  WI = "whois";
  WII = "whois $0 $0";
  WJOIN = "join -window";
  WN = "window new hide";
  WQUERY = "query -window";
  WW = "whowas";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb %K$Z%n}";
    user = "           %K|%n";
    topic = "           %KTopic| %y$topic";
    #
    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb  $winref%K:%n$T%K(%n{sbmode $M}%K)%n}";
    window_empty = "{sb  $winref{sbservertag $tag}}";
    prompt = "{sbmode $[-4]usermode} {sb $[-10]N%K|%n} ";
    prompt_empty = "{sbmode $[-4]usermode} {sb $[-10]N%K|%n} ";
    # BUG SHIT HERE
    #prompt = "{sbmode $[-4]usermode} {sb $cumode_space$[-9]N%K|%n} ";
    #prompt_empty = "{sbmode $[-4]usermode} {sb $cumode_space$[-9]N%K|%n} ";

    # all of these treated specially, they're only displayed when needed
    lag = "  {sb Lag: $0-}";
    act = "  {sb Act%K:%n $0-}";
    away = "  {sbaway $A}";
    more = "  -- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      type = "window";
      placement = "bottom";
      position = "100";
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        act = { priority = "10"; };
        lag = { priority = "-1"; };
        away = { priority = "-1"; };
        more = { priority = "-1"; };
        usercount = { alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "top";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "window";
      placement = "top";
      position = "1";
      visible = "never";
      items = {
        barstart = { priority = "100"; };
        topic = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};


settings = {
  "fe-common/core" = {
    autolog = "yes";
    autolog_path = "~/.irssi/logs/$tag/$0.log";
    hide_server_tags = "yes";
    hilight_nick_matches = "yes";
    show_nickmode_empty = "yes";
    theme = "default";
    log_theme = "default";
    hilight_act_color = "%R";
    hilight_color = "%Y";
    show_names_on_join = "yes";
    term_charset = "utf-8";
    bell_beeps = "yes";
    beep_msg_level = "MSGS DCC DCCMSGS HILIGHT";
    beep_when_window_active = "no";
  };
  core = {
    real_name = "Göran Gustafsson";
    user_name = "twiggy";
    nick = "twiggy";
    recode = "yes";
    recode_fallback = "ISO-8859-1";
    recode_autodetect_utf8 = "yes";
    quit_message = "Bye!";
  };
  "fe-text" = {
    actlist_sort = "refnum";
    scrollback_lines = "2000";
    lag_min_show = "2sec";
  };
  "perl/core/scripts" = {
    usercount_show_halfops = "no";
    usercount_show_zero = "no";
    autoaway_timeout = "1800";
    awl_display_key = "$N:$H$C$S";
    awl_hide_data = "3";
    awl_position = "0";
    awl_sbar_maxlength = "no";
    beep_cmd = "~/Scripts/irssi_beep";
  };
  "irc/core" = {
    alternate_nick = "twiggz";
    ctcp_version_reply = "irssi v6.66 - running on din mamma";
    join_auto_chans_on_invite = "no";
    usermode = "+i";
  };
};

logs = { };
ignores = ( { level = "JOINS PARTS QUITS MODES NICKS"; } );
hilights = (
  { text = "twiggy"; nick = "yes"; word = "yes"; },
  { text = "twigg"; nick = "yes"; word = "yes"; },
  { text = "twiggz"; nick = "yes"; word = "yes"; },
  { text = "goran"; nick = "yes"; word = "yes"; },
  { text = "göran"; nick = "yes"; word = "yes"; }
);
channels = (
  { name = "#degiz"; chatnet = "Quakenet"; autojoin = "yes"; },
  { name = "#openbsd"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#zsh"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#vim"; chatnet = "Freenode"; autojoin = "yes"; },
  { name = "#irssi"; chatnet = "Freenode"; autojoin = "yes"; }
);
